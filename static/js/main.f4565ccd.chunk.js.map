{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","id","href","class","className","target","src","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qPAuEeA,MApEf,WACE,OAAO,kBAAC,WAAD,KACJ,yBAAKC,GAAG,UACL,4BACI,4BAAI,uBAAGC,KAAK,oBAAR,UACJ,4BAAI,uBAAGA,KAAK,aAAR,SACJ,4BAAI,uBAAGA,KAAK,oBAAR,cAIZ,6BAASC,MAAM,UAAUF,GAAG,mBACxB,kCACA,uCAEJ,6BAASG,UAAU,mBAAmBH,GAAG,YACrC,2CACA,yBAAKE,MAAM,kBAEP,uBAAGC,UAAU,eAAeC,OAAO,SAASH,KAAK,0EAC7C,yBAAKI,IAAI,qIACT,kDAEJ,uBAAGF,UAAU,eAAeC,OAAO,SAASH,KAAK,kDAC7C,yBAAKI,IAAI,iFACT,0CAGJ,uBAAGF,UAAU,eAAeC,OAAO,SAASH,KAAK,sCAC7C,yBAAKI,IAAI,+FACT,+CAEJ,uBAAGF,UAAU,eAAeC,OAAO,SAASH,KAAK,mEAC7C,yBAAKI,IAAI,wFACT,6CAEJ,uBAAGF,UAAU,eAAeC,OAAO,SAASH,KAAK,mDAC7C,yBAAKI,IAAI,oGACT,8CAEJ,uBAAGF,UAAU,eAAeC,OAAO,SAASH,KAAK,+EAC7C,yBAAKI,IAAI,wGACT,gDAEJ,uBAAGF,UAAU,eAAeC,OAAO,SAASH,KAAK,4EAC7C,yBAAKI,IAAI,wJACT,8CAGR,uBAAGL,GAAG,eAAeI,OAAO,SAASH,KAAK,uBAA1C,YAGA,+BAGJ,6BAASE,UAAU,UAAUH,GAAG,mBAC5B,mDACA,0DACA,yBAAKG,UAAU,gBACX,uCACA,qCACA,0CCnDQG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f4565ccd.chunk.js","sourcesContent":["import React,{Fragment} from 'react';\nimport './App.css';\n\nfunction App() {\n  return <Fragment>\n     <nav id=\"navbar\">\n        <ul>\n            <li><a href=\"#welcome-section\">About</a></li>\n            <li><a href=\"#projects\">Work</a></li>\n            <li><a href=\"#contact-section\">Contact</a></li>\n        </ul>\n\n    </nav>\n    <section class=\"bg-aqua\" id=\"welcome-section\">\n        <h1>Yo</h1>\n        <p>welcome</p>\n    </section>\n    <section className=\"projects-section\" id=\"projects\">\n        <h2>My Projects</h2>\n        <div class=\"grid-container\" >\n  \n            <a className=\"project-tile\" target=\"_blank\" href=\"https://robsoncamargo.com.br/blog/Voce-sabe-o-que-e-project-management\">\n                <img src=\"https://robsoncamargo.com.br/files/thumbs/xblog_0381-project-management-1-800x333.png,qv=1589395436.pagespeed.ic.3IWCpN2X8v.webp\"/>\n                <p>Project Management</p>\n            </a>\n            <a className=\"project-tile\" target=\"_blank\" href=\"https://www.aarquiteta.com.br/blog/ms-project/\">\n                <img src=\"https://www.aarquiteta.com.br/blog/wp-content/uploads/2017/11/ms-project.jpg\"/>\n                <p>MS Project</p>\n            </a>\n            \n            <a className=\"project-tile\" target=\"_blank\" href=\"https://www.projectbuilder.com.br/\">\n                <img src=\"https://www.projectbuilder.com.br/wp-content/uploads/2019/02/project-building-logo-new.svg\"/>\n                <p>Project Builder</p>\n            </a>\n            <a className=\"project-tile\" target=\"_blank\" href=\"https://pngeans.com/basics-of-critical-path-project-management/\">\n                <img src=\"https://pngeans.com/wp-content/uploads/2020/02/b73ee98a70e1ecefb77b4996f067a2fa.png\"/>\n                <p>Critical Path</p>\n            </a>\n            <a className=\"project-tile\" target=\"_blank\" href=\"http://gamelodge.com.br/critica-project-winter/\">\n                <img src=\"http://gamelodge.com.br/wp-content/uploads/2019/08/7a4027c2ca3bc8e028e029ac85b2103c3969801d.png\"/>\n                <p>Project Winter</p>\n            </a>\n            <a className=\"project-tile\" target=\"_blank\" href=\"https://www.publichealthnotes.com/project-planning-and-development-process/\">\n                <img src=\"https://www.publichealthnotes.com/wp-content/uploads/2020/03/project-planning-header@2x-678x381.png\"/>\n                <p>Project Planning</p>\n            </a>\n            <a className=\"project-tile\" target=\"_blank\" href=\"https://www.linkedin.com/company/smart-project-llc/?originalSubdomain=br\">\n                <img src=\"https://media-exp1.licdn.com/dms/image/C4D0BAQEAk-a6lEtrbw/company-logo_200_200/0?e=1597881600&v=beta&t=VzU6-2Goaj2LvsMnIb269xHx5dZKA0lFKJpiW3Mj2qg\"/>\n                <p>Smart Project</p>\n            </a>\n        </div>\n        <a id=\"profile-link\" target=\"_blank\" href=\"https://github.com/\">\n            Show All\n        </a>\n        <div></div>\n        \n    </section>\n    <section className=\"contact\" id=\"contact-section\">\n        <h1>Let's work together</h1>\n        <p>How do you take yur coffee?</p>\n        <div className=\"social-media\">\n            <a>Facebook</a>\n            <a>GitHub</a>\n            <a>Twitter</a>\n        </div>\n    </section>\n\n\n  </Fragment>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}